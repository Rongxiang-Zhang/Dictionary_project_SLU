{"version":3,"sources":["components/Header/Header.js","data/languages.js","data/poSpeech.js","components/Inputs/Inputs.js","components/Definitions/Definitions.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Component","languages","value","label","poSpeech","Inputs","language","setLanguage","poSp","setpoSpeech","word","setWord","classname","TextField","id","onChange","e","target","Button","class","select","map","item","MenuItem","Definitions","meanings","console","log","i","partOfSpeech","definitions","def","definition","example","App","useState","setMeanings","demoApi","a","axios","get","respone","data","useEffect","style","height","backgroundColor","color","Container","maxWidth","display","flexDirection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.832c7daf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Header.css\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { Paper } from \"@material-ui/core\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        {<span className=\"title\">Dictionary</span>}\n      </div>\n    );\n  }\n}\n","\nconst languages = [\n    { value: \"English\", label: \"en_US\" },\n    { value: \"Turkish\", label: \"tr\" },\n  ];\n  \n  export default languages;","\nconst poSpeech = [\n    { value: \"Noun\", label: \"noun\" },\n    { value: \"Verb\", label: \"verb\" },\n    { value: \"Adjective\", label: \"adjective\" },\n  ];\n  \n  export default poSpeech;","import React from \"react\";\nimport { TextField, MenuItem, ThemeProvider, Button } from \"@material-ui/core\";\nimport \"./Inputs.css\";\nimport languages from \"../../data/languages\";\nimport poSpeech from \"../../data/poSpeech\";\n\nconst Inputs = ({ language, setLanguage, poSp, setpoSpeech, word, setWord}) => {\n  return (\n    <div classname=\"inputs\">\n      <br />\n      <TextField\n        className=\"search_field\"\n        id=\"filled-basic\"\n        value={word}\n        label=\"Search a Word\"\n        onChange={(e) => setWord(e.target.value)}\n      />\n      <Button class=\"find_button\" />\n\n      <br />\n      <br />\n      <TextField\n        select\n        label=\"Part of Speech\"\n        value={poSp}\n        onChange={(e) => setpoSpeech(e.target.value)}\n        className=\"part_of_speech_field\"\n      >\n        {poSpeech.map((item) => (\n          <MenuItem key={item.label} value={item.label}>\n            {item.value}\n          </MenuItem>\n        ))}\n      </TextField>\n         \n      <TextField\n        select\n        label=\"Language\"\n        value={language}\n        onChange={(e) => setLanguage(e.target.value)}\n        className=\"language_select\"\n      >\n        {languages.map((item) => (\n          <MenuItem key={item.label} value={item.label}>\n            {item.value}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      \n    </div>\n  );\n};\nexport default Inputs;\n","import React from \"react\";\nimport \"./Definitions.css\";\n\nconst Definitions = (meanings, word, language, poSpeech,setpoSpeech) => {\n  console.log(meanings.meanings,word,language);\n\n  return (\n    <div className=\"meanings\">\n      {meanings.meanings.map((item) =>\n        item.meanings.map((i) => {\n          if (i.partOfSpeech === 'noun')\n          return i.definitions.map((def) => (\n            <div className=\"definition\">\n              <b> <span className=\"arrow\">arrow</span>{def.definition}</b>\n              <br/>\n              {def.example && <span className=\"name\"> {def.example} </span>}\n            </div>\n          ));;\n        })\n      )}\n    </div>\n\n  );\n};\nexport default Definitions;\n","import \"./App.css\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport Header from \"./components/Header/Header\";\nimport Inputs from \"./components/Inputs/Inputs\";\nimport Definitions from \"./components/Definitions/Definitions\";\n\nfunction App() {\n  const [meanings, setMeanings] = useState([]);\n  const [word, setWord] = useState(\"\");\n  const [language, setLanguage] = useState(\"en_US\");\n  const [poSpeech, setpoSpeech] = useState(\"noun\");\n  const demoApi = async () => {\n    try {\n      const respone = await axios.get(\n        `https://api.dictionaryapi.dev/api/v2/entries/${language}/${word}`\n      );\n\n      setMeanings(respone.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    demoApi();\n  }, [language, word]);\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        height: \"100vh\",\n        backgroundColor: \"white\",\n        color: \"whitesmoke\",\n      }}\n    >\n      <Container\n        maxWidth=\"lg\"\n        style={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\" }}\n      >\n        <Header />\n        <center>\n          <Inputs\n            language={language}\n            setLanguage={setLanguage}\n            poSpeech={poSpeech}\n            setpoSpeech={setpoSpeech}\n            word={word}\n            setWord={setWord}\n          />\n        </center>\n        <Definitions\n          language={language}\n          poSpeech={setpoSpeech}\n          word={word}\n          meanings={meanings}\n        />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}